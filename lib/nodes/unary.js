// Generated by CoffeeScript 1.8.0
var Node, Unary, exports,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Node = require('./node');

Unary = (function(_super) {
  __extends(Unary, _super);

  function Unary(expr) {
    this.expr = expr;
    this.value = this.expr;
  }

  Unary.prototype.equals = function(other) {
    if (!(other && this.constructor === other.constructor)) {
      return false;
    }
    if (this.expr instanceof Node && other.expr instanceof Node) {
      if (!this.expr.equals(other.expr)) {
        return false;
      }
    } else {
      if (this.expr !== other.expr) {
        return false;
      }
    }
    return true;
  };

  return Unary;

})(Node);

exports = module.exports = Unary;
