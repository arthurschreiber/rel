// Generated by CoffeeScript 1.8.0
var False, Node,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Node = require('./node');

False = (function(_super) {
  __extends(False, _super);

  function False() {
    return False.__super__.constructor.apply(this, arguments);
  }

  False.prototype.equals = function(other) {
    return other && this.constructor === other.constructor;
  };

  return False;

})(Node);

module.exports = False;
