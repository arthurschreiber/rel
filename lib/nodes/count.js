// Generated by CoffeeScript 1.8.0
var Count, FunctionNode,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

FunctionNode = require('./function-node');

Count = (function(_super) {
  __extends(Count, _super);

  function Count(expr, distinct, aliaz) {
    this.distinct = distinct != null ? distinct : false;
    Count.__super__.constructor.call(this, expr, aliaz);
  }

  return Count;

})(FunctionNode);

module.exports = Count;
