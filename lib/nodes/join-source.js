// Generated by CoffeeScript 1.8.0
var Binary, JoinSource, exports,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Binary = require('./binary');

JoinSource = (function(_super) {
  __extends(JoinSource, _super);

  function JoinSource(singleSource, joinop) {
    if (joinop == null) {
      joinop = [];
    }
    JoinSource.__super__.constructor.call(this, singleSource, joinop);
  }

  JoinSource.prototype.isEmpty = function() {
    var _ref;
    return !this.left && !((_ref = this.right) != null ? _ref.length : void 0);
  };

  return JoinSource;

})(Binary);

exports = module.exports = JoinSource;
