// Generated by CoffeeScript 1.8.0
var Ascending, Descending, Ordering,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Ordering = require('./ordering');

Descending = require('./descending');

Ascending = (function(_super) {
  __extends(Ascending, _super);

  function Ascending() {
    return Ascending.__super__.constructor.apply(this, arguments);
  }

  Ascending.prototype.reverse = function() {
    return new Descending(this.expr);
  };

  Ascending.prototype.direction = function() {
    return 'asc';
  };

  Ascending.prototype.isAscending = function() {
    return true;
  };

  Ascending.prototype.isDescending = function() {
    return false;
  };

  return Ascending;

})(Ordering);

module.exports = Ascending;
