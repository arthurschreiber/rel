// Generated by CoffeeScript 1.8.0
var FunctionNode, NamedFunction,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

FunctionNode = require('./function-node');

NamedFunction = (function(_super) {
  __extends(NamedFunction, _super);

  function NamedFunction(name, expr, alias) {
    this.name = name;
    NamedFunction.__super__.constructor.call(this, expr, alias);
  }

  NamedFunction.prototype.equals = function(other) {
    return NamedFunction.__super__.equals.call(this, other) && this.name === other.name;
  };

  return NamedFunction;

})(FunctionNode);

module.exports = NamedFunction;
