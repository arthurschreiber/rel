// Generated by CoffeeScript 1.8.0
var Binary, Equality,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Binary = require('./binary');

Equality = (function(_super) {
  __extends(Equality, _super);

  function Equality(left, right) {
    this.left = left;
    this.right = right;
    Equality.__super__.constructor.call(this, this.left, this.right);
    this.operator = '==';
    this.operand1 = this.left;
    this.operand2 = this.right;
  }

  return Equality;

})(Binary);

module.exports = Equality;
