// Generated by CoffeeScript 1.8.0
var Binary, Values,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Binary = require('./binary');

Values = (function(_super) {
  __extends(Values, _super);

  function Values(exprs, columns) {
    if (columns == null) {
      columns = [];
    }
    Values.__super__.constructor.call(this, exprs, columns);
  }

  Values.prototype.expressions = function(e) {
    if (e == null) {
      e = null;
    }
    if (e != null) {
      return this.left = e;
    } else {
      return this.left;
    }
  };

  Values.prototype.columns = function(c) {
    if (c == null) {
      c = null;
    }
    if (c != null) {
      return this.right = c;
    } else {
      return this.right;
    }
  };

  return Values;

})(Binary);

module.exports = Values;
