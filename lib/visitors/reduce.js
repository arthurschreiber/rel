// Generated by CoffeeScript 1.8.0
var Reduce, Visitor,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Visitor = require('./visitor');

Reduce = (function(_super) {
  __extends(Reduce, _super);

  function Reduce() {
    return Reduce.__super__.constructor.apply(this, arguments);
  }

  Reduce.prototype.accept = function(object, collector) {
    return this.visit(object, collector);
  };

  Reduce.prototype.visit = function(object, collector) {
    var type, _ref;
    type = (_ref = object != null ? object.constructor.name : void 0) != null ? _ref : 'Null';
    return this["visitRelNodes" + type](object, collector);
  };

  return Reduce;

})(Visitor);

module.exports = Reduce;
